generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Article {
  id         Int      @id @default(autoincrement())
  title      String
  summary    String
  category   String
  tags       String
  content    String
  image      String
  alt_image  String
  created_at DateTime @default(now())
  authorId   String
  author     User     @relation(fields: [authorId], references: [id])

  @@index([authorId])
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String
  dateOfBirth   DateTime
  district      String
  address       String
  role          Role      @default(USER)
  nik           String    @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  gender        Gender
  Account       Account[]
  Article       Article[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

enum Role {
  USER
  KADER
  KEPALA_KADER
}

enum Gender {
  LAKI_LAKI
  PEREMPUAN
}
